{"version":3,"sources":["components/HomePage.js","data/Instructions.js","data/warnings.js","components/Instructions.js","data/questions.js","components/MainQuestion.js","components/NavBar.js","components/Question.js","components/Winner.js","App.js","index.js"],"names":["CryptoJS","require","HomePage","useState","teamName","setTeamName","name1","setName1","email1","setEmail1","name2","setName2","email2","setEmail2","history","useHistory","useEffect","cipher_text","localStorage","getItem","local_questionId","AES","decrypt","process","toString","enc","Utf8","push","className","Container","Grid","container","justify","item","md","TextField","label","variant","value","onChange","e","target","fullWidth","style","marginTop","textAlign","Button","onClick","setItem","alert","instructions","id","text","warnings","inst","wrngs","Instructions","map","questions","answer","imgURL","main_question","MainQuestion","startTest","a","encrypt","NavBar","AppBar","position","background","Toolbar","src","alt","marginLeft","marginRight","clear","ques","SHEET_ID","Question","question","setQuestion","setAnswer","questionId","useParams","showError","setShowError","appendSpreadsheet","row","doc","GoogleSpreadsheet","useServiceAccountAuth","client_email","private_key","loadInfo","sheet","sheetsById","addRow","console","error","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","message","action","IconButton","size","aria-label","color","fontSize","parseInt","marginBottom","correct_answer","newRow","TeamName","Name1","Email1","Name2","Email2","Time","Date","toLocaleString","NextQuestion","Winner","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66de707d.chunk.js","sourcesContent":["import { Button, Container, Grid, TextField } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router'\n\nvar CryptoJS = require(\"crypto-js\");\n\nconst HomePage = () => {\n\n    const [teamName, setTeamName] = useState('')\n    const [name1, setName1] = useState('')\n    const [email1, setEmail1] = useState('')\n    const [name2, setName2] = useState('')\n    const [email2, setEmail2] = useState('')\n\n    const history = useHistory();\n\n    useEffect(() => {\n        const cipher_text = localStorage.getItem('questionId')\n\n        if(cipher_text!==null) {\n            const SECRET_KEY = process.env.REACT_APP_SECRET_KEY;\n            const bytes = CryptoJS.AES.decrypt(cipher_text, SECRET_KEY)\n            const local_questionId = bytes.toString(CryptoJS.enc.Utf8)\n            \n            history.push(`/question/${local_questionId}`)\n        }\n        else {\n            const TeamName = localStorage.getItem('TeamName')\n            \n            if(TeamName!==null) {\n                history.push('/instructions')\n            }\n        }\n\n    }, [history])\n\n    const Next = () => {\n        if(!teamName || !name1 || !email1) {\n            alert(\"Enter all the required fields\")\n        }\n        else {\n            localStorage.setItem('TeamName', teamName)\n            localStorage.setItem('Name1', name1)\n            localStorage.setItem('Email1', email1)\n\n            if(name2) {\n                localStorage.setItem('Name2', name2)\n                localStorage.setItem('Email2', email2)\n            }\n\n            history.push('/instructions')\n        }\n    }\n\n    return (\n        <div className=\"homepage\">\n            <Container>\n                <Grid container justify='center'>\n                    <Grid item md={6}>\n                        <TextField \n                            label=\"Team Name*\" \n                            variant=\"outlined\"\n                            value={teamName}\n                            onChange={(e)=>(setTeamName(e.target.value))}\n                            fullWidth\n                        />\n                        <h3>Team Member 1*</h3>\n                        <TextField \n                            label=\"Name*\" \n                            variant=\"outlined\"\n                            value={name1}\n                            onChange={(e)=>(setName1(e.target.value))}\n                            fullWidth\n                        />\n                        <TextField \n                            label=\"Email*\" \n                            variant=\"outlined\"\n                            style={{marginTop: '10px'}}\n                            value={email1}\n                            onChange={(e)=>(setEmail1(e.target.value))}\n                            fullWidth\n                        />\n                        <h3>Team Member 2</h3>\n                        <TextField \n                            label=\"Name\" \n                            variant=\"outlined\"\n                            value={name2}\n                            onChange={(e)=>(setName2(e.target.value))}\n                            fullWidth\n                        />\n                        <TextField \n                            label=\"Email\" \n                            variant=\"outlined\"\n                            style={{marginTop: '10px'}}\n                            value={email2}\n                            onChange={(e)=>(setEmail2(e.target.value))}\n                            fullWidth\n                        />\n                    </Grid>\n                </Grid> \n                <div style={{textAlign: 'center', marginTop: '20px'}}>\n                    <Button variant=\"contained\" onClick={Next}>Next</Button>\n                </div>\n            </Container>\n        </div>\n    )\n}\n\nexport default HomePage\n","const instructions = [\n    {\n        id: 1,\n        text: \"All the answers of the treasure hunt have to be written in lower case without any space (For example if the answer is James Bond 007, write it as jamesbond007)\",\n    },\n    {\n        id: 2,\n        text: \"There will be no special characters involved in the answers, only lower case alphabet and numbers.\",\n    },\n    {\n        id: 3,\n        text: \"There are 17 questions in the Treasure Hunt. The level of difficulty will increase as the participant clears each question.\",\n    },\n    {\n        id: 4,\n        text: \"You can proceed to the next question only after you solve the question.\",\n    },\n    {\n        id: 5,\n        text: \"The winner is the first team to find all the treasure questions, or the team that finds the answer of the most treasure questions in the allotted time.\",\n    },\n]\n\nexport default instructions;\n","const warnings = [\n    {\n        id: 1,\n        text: \"Make sure that there are NO spaces before and after the answers.\",\n    },\n    {\n        id: 2,\n        text: \"Event ends at 7:00 PM exactly. No extensions will be given.\",\n    },\n    {\n        id: 3,\n        text: \"One team can only attempt once.\",\n    }\n]\n\nexport default warnings","import {Container, Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport React, { useEffect } from 'react'\nimport { useHistory } from 'react-router';\nimport instructions from '../data/Instructions';\nimport warnings from '../data/warnings';\n\nvar CryptoJS = require(\"crypto-js\");\nconst inst = instructions;\nconst wrngs = warnings;\n\nconst Instructions = () => {\n\n    const history = useHistory();\n\n    useEffect(() => {\n\n        const TeamName = localStorage.getItem('TeamName')\n        \n        if(TeamName===null) {\n            history.push('/')\n        }\n        else {\n            const cipher_text = localStorage.getItem('questionId')\n\n            if(cipher_text!==null) {\n                const SECRET_KEY = process.env.REACT_APP_SECRET_KEY;\n                const bytes = CryptoJS.AES.decrypt(cipher_text, SECRET_KEY)\n                const local_questionId = bytes.toString(CryptoJS.enc.Utf8)\n                \n                history.push(`/question/${local_questionId}`)\n            }\n        }\n\n    }, [history])\n\n\n    return (\n        <div className=\"homepage\">\n            <Container>\n                <h1>Instructions</h1>\n                <Grid container justify='center'>\n                    <Grid item md={10}>\n                        {inst.map((item) => {\n                            return (\n                                <p key={item.id}>{item.id}. {item.text}</p>\n                            )\n                        })}\n                    </Grid>\n                </Grid>\n\n                <h1>Warnings</h1>\n                <Grid container justify='center'>\n                    <Grid item md={10}>\n                        {wrngs.map((item) => {\n                            return (\n                                <p key={item.id}>{item.id}. {item.text}</p>\n                            )\n                        })}\n                    </Grid>\n                </Grid>\n                \n                <div style={{textAlign: 'center'}}>\n                    <Button variant=\"contained\" onClick={() => (history.push('/main-question'))}>Next</Button>\n                </div>\n            </Container>\n        </div>\n    )\n}\n\nexport default Instructions\n","const questions = [\n    {\n        id: 1,\n        text: ['What should you wear when you step out of the house in the current situation?'],\n        answer: 'U2FsdGVkX18abwhXIM0vENaz9dFlFHPFr0Lmh7rG64Q='\n    },\n    {\n        id: 2,\n        text: ['My enginEering College Has A new interNshIp Called Sleepathon.'],\n        answer: 'U2FsdGVkX18rJlPr6tJJRdgLIdzKdQaZq730qZGyUGE=',\n    },\n    {\n        id: 3,\n        imgURL: '/assets/img/question3.png',\n        answer: 'U2FsdGVkX1+Ff/5Vw5eeGzdBRM7RIgzYy7KyK92Y1Q8=',\n    },\n    {\n        id: 4,\n        imgURL: '/assets/img/question4.png',\n        answer: 'U2FsdGVkX181gAX8t/jD4LQNpFdRGCGPWlKpw6EoULo=',\n    },\n    {\n        id: 5,\n        text: ['Code?'],\n        imgURL: '/assets/img/question5.jpeg',\n        answer: 'U2FsdGVkX1+ITmdxzmja+eAC7OCSgp8HZgZPlVNSqHU=',\n    },\n    {\n        id: 6,\n        imgURL: '/assets/img/question6.png',\n        answer: 'U2FsdGVkX18+FfQ1sBFvfxXSG5RYwFFgL3mbBbCeb2w=',\n    },\n    {\n        id: 7,\n        text: ['Guess this place in college', 'Old wood, intertwined hands, paper and silence, now only silence remains. Who am I?'],\n        answer: 'U2FsdGVkX18wnTO3vaABnbgTx6XrFtDzli4G7HYmsag=',\n    },\n    {\n        id: 8,\n        text: ['What is the connection between all the following names ? Be specific ', 'Paris, Rio de Janeiro, Tokyo, Cairo, Jaipur, New York, Buenos Aires, Abu Dhabi, Jakarta, Melbourne, Lagos, Oslo', 'Where do you find these names in your phone?'],\n        answer: 'U2FsdGVkX19epuoFz00AxjYfzbcjyzoqEqXwrNYIi8Y=',\n    },\n    {\n        id: 9,\n        text: ['#05'],\n        imgURL: '/assets/img/question9.jpeg',\n        answer: 'U2FsdGVkX1+K/Zavdf9VYWBnNhxQcIMr4DYpEGJu18A=',\n    },\n    {\n        id: 10,\n        imgURL: '/assets/img/question10.png',\n        answer: 'U2FsdGVkX1+EoP3Fpth+vhb/XHEp84QlpFPbLgAol1s=',\n    },\n    {\n        id: 11,\n        imgURL: '/assets/img/question11.png',\n        answer: 'U2FsdGVkX1++7bDwwNuECcYeiripICpIFbkQSyKKA2M=',\n    },\n    {\n        id: 12,\n        text: ['What is this pattern called according to a famous video song that took the internet by storm in 2018 and which made a comeback in 2020?'],\n        imgURL: '/assets/img/question12.png',\n        answer: 'U2FsdGVkX18BjhLPIiiFMToU6eJQobHCc9clGqEV5WY=',\n    },\n    {\n        id: 13,\n        imgURL: '/assets/img/question13.png',\n        answer: 'U2FsdGVkX1/lDaVxUjafwjj6Y0YGG8l0LPhCcnxYvOc=',\n    },\n    {\n        id: 14,\n        text: ['Given F(x) = 3.13 - x^2 and xo = 0.3, apply one iteration of Gauss Seidel method to get answer ‘y’ upto 2 decimal places. If the last digit (after decimal) of y is n, then what is the nth word of the phrase in the meme below?'],\n        imgURL: '/assets/img/question14.png',\n        answer: 'U2FsdGVkX18G0MZoxlXQEpVnnUjmq0n46S0n8xZZhXI=',\n    },\n    {\n        id: 15,\n        text: ['1Q8fG0TtVAY'],\n        imgURL: '/assets/img/question15.png',\n        answer: 'U2FsdGVkX1/cZCN6abm6RDD30EipFfDIEtWWtyEKlZM=',\n    },\n    {\n        id: 16,\n        imgURL: '/assets/img/question16.png',\n        answer: 'U2FsdGVkX1/DKBou2R0TwgDRpgU3kNcmMF34MUtExcA=',\n    },\n    {\n        id: 17,\n        text: ['First think of twice, the duo Dhanush and Shruthi',\n            'Sister, why this kolaveri? ',\n            'Next, three of them in a boat,',\n            'Become Holy when they follow A.',\n            'And finally give me the onion router,',\n            'Often confused with acts of piracy.',\n            'Now string them together and answer me this,',\n            'Which creature would you be unwilling to kiss?'],\n        answer: 'U2FsdGVkX1+lyUr390KWhqxEfxMGlddLEbNxN4O62p4=',\n    },\n    {\n        id: 18,\n        text: ['A vehicle is moving on a highway at a speed of V. If the coefficient of friction between the road surface and the tyres is 0.35 and the reaction time of the driver is t, then the lag distance is ……….',\n        '(hint: the formula for calculation of lag distance is = 0.278x V x t)'],\n        answer: 'U2FsdGVkX1/0WCOsqGmw3G4JtpdE0jmubzCNRHvtEDI=',\n    },\n]\n\nexport default questions;","import { Button, Container, Grid } from '@material-ui/core'\nimport React, { useEffect } from 'react'\nimport { useHistory } from 'react-router';\nimport questions from '../data/questions';\n\nvar CryptoJS = require(\"crypto-js\");\nconst main_question = questions[17];\n\nconst MainQuestion = () => {\n\n    const history = useHistory()\n\n    useEffect(() => {\n\n        const TeamName = localStorage.getItem('TeamName')\n        \n        if(TeamName===null) {\n            history.push('/')\n        }\n        else {\n            const cipher_text = localStorage.getItem('questionId')\n\n            if(cipher_text!==null) {\n                const SECRET_KEY = process.env.REACT_APP_SECRET_KEY;\n                const bytes = CryptoJS.AES.decrypt(cipher_text, SECRET_KEY)\n                const local_questionId = bytes.toString(CryptoJS.enc.Utf8)\n                \n                history.push(`/question/${local_questionId}`)\n            }\n        }\n\n    }, [history])\n\n    const startTest = async () => {\n        const SECRET_KEY = process.env.REACT_APP_SECRET_KEY\n        var cipher_text = CryptoJS.AES.encrypt(\"1\", SECRET_KEY)\n        localStorage.setItem('questionId', cipher_text);\n        history.push('/question/1');\n    }\n\n    return (\n        <div className=\"home-page\">\n            <Container>\n                <h1 style={{textAlign: 'center'}}>Main Question</h1>\n                <Grid container justify='center'>\n                    <Grid item md={10}>\n                        {main_question.text.map((item) => {\n                            return (\n                                <p>{item}</p>\n                            )\n                        })}\n                        <p>To get the value of V and t you have to solve for the treasure and after you solve for the treasure, this question will reappear at the end with the missing values of V and t given.</p>\n                    </Grid>\n                </Grid>\n                \n                <div style={{textAlign: 'center'}}>\n                    <Button variant=\"contained\" onClick={startTest}>Start</Button>\n                </div>\n                \n            </Container>\n        </div>\n    )\n}\n\nexport default MainQuestion\n","import { AppBar, Button, Toolbar } from '@material-ui/core'\nimport React from 'react'\nimport { useHistory } from 'react-router'\n// import Timer from './Timer';\n\nconst NavBar = () => {\n\n    const history = useHistory();\n\n    const Restart = () => {\n        localStorage.clear()\n        history.push(\"/\")\n    }\n\n    return (\n        <AppBar position=\"fixed\" className=\"nav-bar\" style={{ background: '#9C5513' }}>\n            <Toolbar>\n                <img src=\"/assets/img/Nirmaan_Logo.png\" alt=\"nirmaan logo\"/>\n                <h4>Nirmaan 2021</h4>\n                <img src=\"/assets/img/ASCE_Logo.png\" style={{marginLeft: 'auto'}} alt=\"asce-logo\"/>\n                <h4 style={{marginLeft: '20px', marginRight: '20px'}}>Quar-hunt-ine</h4>\n                <img src=\"/assets/img/IE-Logo.png\" style={{marginRight: 'auto'}} alt=\"ie-logo\"/>\n                {/* <Timer/> */}\n                <Button onClick={Restart} variant=\"contained\">Restart</Button>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default NavBar\n","import { Button, Container, Grid, IconButton, Snackbar, TextField } from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close';\nimport { GoogleSpreadsheet } from 'google-spreadsheet';\nimport React, { useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router'\nimport questions from '../data/questions'\n\nvar CryptoJS = require(\"crypto-js\");\nconst ques = questions;\nconst V_Value = process.env.REACT_APP_V_Value;\nconst T_Value = process.env.REACT_APP_T_Value;\n\nconst SHEET_ID = [2142584393, 726637169, 1339565251, 208636639, 1324951177, 498098596, 947939642, 932597636, 1750764149, 1669416164, 4524496, 813507386, 110234965, 1937890974, 1279576612, 338932454, 1097222156, 0]\n\nconst Question = () => {\n\n    const [question, setQuestion] = useState('');\n    const [answer, setAnswer] = useState('');\n    const {questionId} = useParams()\n    const history = useHistory()\n\n    const [showError, setShowError] = useState(false);\n\n    useEffect(() => {\n\n        const TeamName = localStorage.getItem('TeamName')\n        \n        if(TeamName===null) {\n            history.push('/')\n        }\n        else {\n            const cipher_text = localStorage.getItem('questionId')\n\n            if(cipher_text===null) {\n                history.push('/instructions')\n            }\n            else {\n                const SECRET_KEY = process.env.REACT_APP_SECRET_KEY;\n                const bytes = CryptoJS.AES.decrypt(cipher_text, SECRET_KEY)\n                const local_questionId = bytes.toString(CryptoJS.enc.Utf8)\n                    \n                if(local_questionId!==questionId) {\n                    history.push(`/question/${local_questionId}`)\n                }\n                \n                setQuestion(ques[local_questionId-1]);\n            }\n        }\n\n    },[history, questionId])\n\n    const appendSpreadsheet = async (row) => {\n        const SPREADSHEET_ID = process.env.REACT_APP_SPREADSHEET_ID;\n        const CLIENT_EMAIL = process.env.REACT_APP_GOOGLE_CLIENT_EMAIL;\n        const PRIVATE_KEY = process.env.REACT_APP_GOOGLE_SERVICE_PRIVATE_KEY;\n\n        const doc = new GoogleSpreadsheet(SPREADSHEET_ID);\n\n        try {\n            await doc.useServiceAccountAuth({\n                client_email: CLIENT_EMAIL,\n                private_key: PRIVATE_KEY,\n            });\n            // loads document properties and worksheets\n            await doc.loadInfo();\n\n            const sheet = doc.sheetsById[SHEET_ID[questionId-1]];\n            await sheet.addRow(row);\n        } catch (e) {\n            console.error('Error: ', e);\n        }\n    };\n\n    const NextQuestion = () => {\n\n        const TeamName = localStorage.getItem('TeamName')\n        const Name1 = localStorage.getItem('Name1')\n        const Email1 = localStorage.getItem('Email1')\n        const Name2 = localStorage.getItem('Name2')\n        const Email2 = localStorage.getItem('Email2')\n\n        const newRow = { \n            TeamName: TeamName, \n            Name1: Name1,\n            Email1: Email1,\n            Name2: Name2,\n            Email2: Email2,\n            Time : new Date().toLocaleString()\n        };\n\n        appendSpreadsheet(newRow)\n\n        const SECRET_KEY = process.env.REACT_APP_SECRET_KEY\n        var cipher_text = CryptoJS.AES.encrypt((parseInt(questionId)+1).toString(), SECRET_KEY)\n        localStorage.setItem('questionId', cipher_text)\n\n        if(parseInt(questionId)!==18) {\n            history.push(`/question/${questionId+1}`)\n        }\n        else {\n            history.push('/winner')\n        }\n    }\n\n    const checkAnswer = () => {\n        const SECRET_KEY = process.env.REACT_APP_SECRET_KEY;\n        const bytes = CryptoJS.AES.decrypt(question.answer, SECRET_KEY)\n        const correct_answer = bytes.toString(CryptoJS.enc.Utf8)\n\n        if(answer===correct_answer) {\n            setAnswer(\"\")\n            setShowError(false)\n            NextQuestion()\n        }\n        else {\n            setShowError(true)\n        }\n    }\n\n    return (\n        <div className=\"question-page\">\n            <Snackbar\n                anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n                }}\n                open={showError}\n                autoHideDuration={6000}\n                message=\"Wrong Answer\"\n                action={\n                    <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={() => setShowError(false)}>\n                        <CloseIcon fontSize=\"small\" />\n                    </IconButton>\n                }\n            />\n            \n            <Container>\n                {parseInt(questionId)!==18? <h1>Question {question.id}</h1>: <h1>Congratulations!! You are at the final question</h1>}\n                <Grid container justify='center'>\n                    <Grid item md={6}>\n                        {question.text ? question.text.map((item) => {\n                            return (\n                                <p>{item}</p>\n                            )\n                        }) : <div></div>}\n\n                        {parseInt(questionId)===18? <><p>V: {V_Value}</p> <p>t: {T_Value}</p></>: <div></div>}\n                        \n                        {question.imgURL \n                        ?   <div style={{textAlign: 'center', marginBottom: '20px'}}>\n                                <img src={question.imgURL} alt=\"question\"/>\n                            </div>\n                        : <div></div>}\n                        \n                        <TextField \n                            label=\"Answer\" \n                            variant=\"outlined\" \n                            value={answer}\n                            onChange={(e)=>(setAnswer(e.target.value))}\n                            fullWidth\n                        />\n                    </Grid>\n                </Grid>\n                <div style={{textAlign: 'center', marginTop: '20px'}}>\n                    <Button variant=\"contained\" onClick={checkAnswer}>Submit</Button>\n                </div>\n            </Container>\n        </div>\n    )\n}\n\nexport default Question\n","import { Container } from '@material-ui/core'\nimport React, { useEffect } from 'react'\nimport { useHistory } from 'react-router'\n\nvar CryptoJS = require(\"crypto-js\");\n\nconst Winner = () => {\n\n    const history = useHistory()\n\n    useEffect(() => {\n\n        const TeamName = localStorage.getItem('TeamName')\n        \n        if(TeamName===null) {\n            history.push('/')\n        }\n        else {\n            const cipher_text = localStorage.getItem('questionId')\n\n            if(cipher_text===null) {\n                history.push('/instructions')\n            }\n            else {\n                const SECRET_KEY = process.env.REACT_APP_SECRET_KEY;\n                const bytes = CryptoJS.AES.decrypt(cipher_text, SECRET_KEY)\n                const local_questionId = bytes.toString(CryptoJS.enc.Utf8)\n                    \n                if(local_questionId!==\"19\") {\n                    history.push(`/question/${local_questionId}`)\n                }\n            }\n        }\n    },[history])\n\n    return (\n        <div className=\"winner-page\">\n            <Container>\n                <h1>Congratulations!!!!!</h1>\n            </Container>\n        </div>\n    )\n}\n\nexport default Winner\n","import React from 'react'\nimport {HashRouter, Route, Switch} from 'react-router-dom'\nimport HomePage from './components/HomePage'\nimport Instructions from './components/Instructions'\nimport MainQuestion from './components/MainQuestion'\nimport NavBar from './components/NavBar'\nimport Question from './components/Question'\nimport Winner from './components/Winner'\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <NavBar/>\n      <Switch>\n        <Route exact path=\"/\">\n          <HomePage/>\n        </Route>\n        <Route path=\"/instructions\">\n          <Instructions/>\n        </Route>\n        <Route path='/main-question'>\n          <MainQuestion/>\n        </Route>\n        <Route path=\"/question/:questionId\">\n          <Question/>\n        </Route>\n        <Route path=\"/winner\">\n          <Winner/>\n        </Route>\n      </Switch>\n    </HashRouter>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './css/main.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}