{"version":3,"sources":["components/HomePage.js","data/Instructions.js","data/questions.js","components/Instructions.js","components/NavBar.js","components/Question.js","components/Winner.js","App.js","index.js"],"names":["HomePage","useState","teamName","setTeamName","name1","setName1","email1","setEmail1","name2","setName2","email2","setEmail2","history","useHistory","className","Container","Grid","container","justify","item","md","TextField","label","variant","value","onChange","e","target","fullWidth","style","marginTop","textAlign","Button","onClick","localStorage","setItem","push","alert","instructions","id","text","questions","answer","imgURL","CryptoJS","require","inst","main_question","Instructions","useEffect","local_questionId","getItem","startTest","a","process","cipher_text","AES","encrypt","map","NavBar","AppBar","position","background","Toolbar","src","alt","marginLeft","marginRight","clear","ques","Question","question","setQuestion","setAnswer","questionId","useParams","showError","setShowError","showSuccess","setShowSuccess","decrypt","toString","enc","Utf8","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","message","action","IconButton","size","aria-label","color","fontSize","parseInt","marginBottom","correct_answer","NextQuestion","doc","GoogleSpreadsheet","TeamName","Name1","Email1","Name2","Email2","Winner","row","useServiceAccountAuth","client_email","private_key","loadInfo","sheet","sheetsById","addRow","console","error","appendSpreadsheet","Time","Date","toLocaleString","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d635531.chunk.js","sourcesContent":["import { Button, Container, Grid, TextField } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { useHistory } from 'react-router'\n\nconst HomePage = () => {\n\n    const [teamName, setTeamName] = useState('')\n    const [name1, setName1] = useState('')\n    const [email1, setEmail1] = useState('')\n    const [name2, setName2] = useState('')\n    const [email2, setEmail2] = useState('')\n\n    const history = useHistory();\n\n    const Next = () => {\n        if(!teamName || !name1 || !email1) {\n            alert(\"Enter all the required fields\")\n        }\n        else {\n            localStorage.setItem('TeamName', teamName)\n            localStorage.setItem('Name1', name1)\n            localStorage.setItem('Email1', email1)\n\n            if(name2) {\n                localStorage.setItem('Name2', name2)\n                localStorage.setItem('Email2', email2)\n            }\n\n            history.push('/instructions')\n        }\n    }\n\n    return (\n        <div className=\"homepage\">\n            <Container>\n                <Grid container justify='center'>\n                    <Grid item md={6}>\n                        <TextField \n                            label=\"Team Name*\" \n                            variant=\"outlined\"\n                            value={teamName}\n                            onChange={(e)=>(setTeamName(e.target.value))}\n                            fullWidth\n                        />\n                        <h3>Team Member 1*</h3>\n                        <TextField \n                            label=\"Name*\" \n                            variant=\"outlined\"\n                            value={name1}\n                            onChange={(e)=>(setName1(e.target.value))}\n                            fullWidth\n                        />\n                        <TextField \n                            label=\"Email*\" \n                            variant=\"outlined\"\n                            style={{marginTop: '10px'}}\n                            value={email1}\n                            onChange={(e)=>(setEmail1(e.target.value))}\n                            fullWidth\n                        />\n                        <h3>Team Member 2</h3>\n                        <TextField \n                            label=\"Name\" \n                            variant=\"outlined\"\n                            value={name2}\n                            onChange={(e)=>(setName2(e.target.value))}\n                            fullWidth\n                        />\n                        <TextField \n                            label=\"Email\" \n                            variant=\"outlined\"\n                            style={{marginTop: '10px'}}\n                            value={email2}\n                            onChange={(e)=>(setEmail2(e.target.value))}\n                            fullWidth\n                        />\n                    </Grid>\n                </Grid> \n                <div style={{textAlign: 'center', marginTop: '20px'}}>\n                    <Button variant=\"contained\" onClick={Next}>Next</Button>\n                </div>\n            </Container>\n        </div>\n    )\n}\n\nexport default HomePage\n","const instructions = [\n    {\n        id: 1,\n        text: \"All the answers of the treasure hunt have to be written in lower case without any space.\",\n    },\n    {\n        id: 2,\n        text: \"There will be no special characters involved in the answers, only lower case alphabet and numbers.\",\n    },\n    {\n        id: 3,\n        text: \"There are 16 questions in the Treasure Hunt. The level of difficulty will increase as the participant clears each question.\",\n    },\n    {\n        id: 4,\n        text: \"You can proceed to the next question only after you solve the question.\",\n    },\n    {\n        id: 5,\n        text: \"The winner is the first team to find all the treasure questions, or the team that finds the answer of the most treasure questions in the allotted time.\",\n    },\n]\n\nexport default instructions;\n","const questions = [\n    {\n        id: 1,\n        text: ['What should you wear when you step out of the house in the current situation?'],\n        answer: 'U2FsdGVkX18abwhXIM0vENaz9dFlFHPFr0Lmh7rG64Q='\n    },\n    {\n        id: 2,\n        text: ['My enginEering College Has A new interNshIp Called Sleepathon.'],\n        answer: 'U2FsdGVkX18rJlPr6tJJRdgLIdzKdQaZq730qZGyUGE=',\n    },\n    {\n        id: 3,\n        imgURL: '/assets/img/question3.png',\n        answer: 'U2FsdGVkX1+Ff/5Vw5eeGzdBRM7RIgzYy7KyK92Y1Q8=',\n    },\n    {\n        id: 4,\n        imgURL: '/assets/img/question4.png',\n        answer: 'U2FsdGVkX181gAX8t/jD4LQNpFdRGCGPWlKpw6EoULo=',\n    },\n    {\n        id: 5,\n        text: ['Code?'],\n        imgURL: '/assets/img/question5.jpeg',\n        answer: 'U2FsdGVkX1+ITmdxzmja+eAC7OCSgp8HZgZPlVNSqHU=',\n    },\n    {\n        id: 6,\n        imgURL: '/assets/img/question6.png',\n        answer: 'U2FsdGVkX18+FfQ1sBFvfxXSG5RYwFFgL3mbBbCeb2w=',\n    },\n    {\n        id: 7,\n        text: ['Guess this place in college', 'Old wood, intertwined hands, paper and silence, now only silence remains. Who am I?'],\n        answer: 'U2FsdGVkX18wnTO3vaABnbgTx6XrFtDzli4G7HYmsag=',\n    },\n    {\n        id: 8,\n        text: ['What is the connection between all the following names ? Be specific ', 'Paris, Rio de Janeiro, Tokyo, Cairo, Jaipur, New York, Buenos Aires, Abu Dhabi, Jakarta, Melbourne, Lagos, Oslo', 'Where do you find these names in your phone?'],\n        answer: 'U2FsdGVkX19epuoFz00AxjYfzbcjyzoqEqXwrNYIi8Y=',\n    },\n    {\n        id: 9,\n        text: ['#05'],\n        imgURL: '/assets/img/question9.jpeg',\n        answer: 'U2FsdGVkX1+K/Zavdf9VYWBnNhxQcIMr4DYpEGJu18A=',\n    },\n    {\n        id: 10,\n        imgURL: '/assets/img/question10.png',\n        answer: 'U2FsdGVkX1+EoP3Fpth+vhb/XHEp84QlpFPbLgAol1s=',\n    },\n    {\n        id: 11,\n        imgURL: '/assets/img/question11.png',\n        answer: 'U2FsdGVkX1++7bDwwNuECcYeiripICpIFbkQSyKKA2M=',\n    },\n    {\n        id: 12,\n        text: ['What is this pattern called according to a famous video song that took the internet by storm in 2018 and which made a comeback in 2020?'],\n        imgURL: '/assets/img/question12.png',\n        answer: 'U2FsdGVkX18BjhLPIiiFMToU6eJQobHCc9clGqEV5WY=',\n    },\n    {\n        id: 13,\n        imgURL: '/assets/img/question13.png',\n        answer: 'U2FsdGVkX1/lDaVxUjafwjj6Y0YGG8l0LPhCcnxYvOc=',\n    },\n    {\n        id: 14,\n        text: ['Given F(x) = 3.13 - x^2 and xo = 0.3, apply one iteration of Gauss Seidel method to get answer ‘y’ upto 2 decimal places. If the last digit (after decimal) of y is n, then what is the nth word of the phrase in the meme below?'],\n        imgURL: '/assets/img/question14.png',\n        answer: 'U2FsdGVkX18G0MZoxlXQEpVnnUjmq0n46S0n8xZZhXI=',\n    },\n    {\n        id: 15,\n        text: ['1Q8fG0TtVAY'],\n        imgURL: '/assets/img/question15.png',\n        answer: 'U2FsdGVkX1/cZCN6abm6RDD30EipFfDIEtWWtyEKlZM=',\n    },\n    {\n        id: 16,\n        imgURL: '/assets/img/question16.png',\n        answer: 'U2FsdGVkX1/DKBou2R0TwgDRpgU3kNcmMF34MUtExcA=',\n    },\n    {\n        id: 17,\n        text: ['First think of twice, the duo Dhanush and Shruthi',\n            'Sister, why this kolaveri? ',\n            'Next, three of them in a boat,',\n            'Become Holy when they follow A.',\n            'And finally give me the onion router,',\n            'Often confused with acts of piracy.',\n            'Now string them together and answer me this,',\n            'Which creature would you be unwilling to kiss?'],\n        answer: 'U2FsdGVkX1+lyUr390KWhqxEfxMGlddLEbNxN4O62p4=',\n    },\n    {\n        id: 18,\n        text: ['A vehicle is moving on a highway at a speed of V. If the coefficient of friction between the road surface and the tyres is 0.35 and the reaction time of the driver is t, then the lag distance is ……….',\n        '(hint: the formula for calculation of lag distance is = 0.278x V x t)'],\n        answer: 'U2FsdGVkX1/0WCOsqGmw3G4JtpdE0jmubzCNRHvtEDI=',\n    },\n]\n\nexport default questions;","import {Container, Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport React, { useEffect } from 'react'\nimport { useHistory } from 'react-router';\nimport instructions from '../data/Instructions';\nimport questions from '../data/questions';\n\nvar CryptoJS = require(\"crypto-js\");\nconst inst = instructions;\nconst main_question = questions[17];\n\nconst Instructions = () => {\n\n    const history = useHistory();\n\n    useEffect(() => {\n        const local_questionId = localStorage.getItem('questionId');\n        if(local_questionId!=null) {\n            history.push(`/question/${local_questionId}`)\n        }\n    }, [history])\n\n    const startTest = async () => {\n        const SECRET_KEY = process.env.REACT_APP_SECRET_KEY\n        var cipher_text = CryptoJS.AES.encrypt(\"1\", SECRET_KEY)\n        localStorage.setItem('questionId', cipher_text);\n        history.push('/question/1');\n    }\n\n    \n\n    return (\n        <div className=\"homepage\">\n            <Container>\n                <h1>Instructions</h1>\n                <Grid container justify='center'>\n                    <Grid item md={10}>\n                        {inst.map((item) => {\n                            return (\n                                <p key={item.id}>{item.id}. {item.text}</p>\n                            )\n                        })}\n                    </Grid>\n                    <Grid item md={10}>\n                        <h2 style={{textAlign: 'center'}}>Main Question</h2>\n                    </Grid>\n                    <Grid item md={10}>\n                        {main_question.text.map((item) => {\n                            return (\n                                <p>{item}</p>\n                            )\n                        })}\n                        <p>To get the value of V and t you have to solve for the treasure and after you solve for the treasure, this question will reappear at the end with the missing values of V and t given.</p>\n                    </Grid>\n                </Grid>\n                \n                <div style={{textAlign: 'center'}}>\n                    <Button variant=\"contained\" onClick={startTest}>Start</Button>\n                </div>\n            </Container>\n            {/* Home Page\n            <Button variant=\"contained\" onClick={startTest}>Start</Button> */}\n        </div>\n    )\n}\n\nexport default Instructions\n","import { AppBar, Button, Toolbar } from '@material-ui/core'\nimport React from 'react'\nimport { useHistory } from 'react-router'\n\nconst NavBar = () => {\n\n    const history = useHistory();\n\n    const Restart = () => {\n        localStorage.clear()\n        history.push(\"/\")\n    }\n\n    return (\n        <AppBar position=\"fixed\" className=\"nav-bar\" style={{ background: '#9C5513' }}>\n            <Toolbar>\n                <img src=\"/assets/img/Nirmaan_Logo.png\" alt=\"nirmaan logo\"/>\n                <h4>Nirmaan 2021</h4>\n                <img src=\"/assets/img/ASCE_Logo.png\" style={{marginLeft: 'auto'}} alt=\"asce-logo\"/>\n                <h4 style={{marginLeft: '20px', marginRight: '20px'}}>Quar-hunt-ine</h4>\n                <img src=\"/assets/img/IE-Logo.png\" style={{marginRight: 'auto'}} alt=\"ie-logo\"/>\n                <Button onClick={Restart} variant=\"contained\">Restart</Button>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default NavBar\n","import { Button, Container, Grid, IconButton, Snackbar, TextField } from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close';\nimport React, { useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router'\nimport questions from '../data/questions'\n\nvar CryptoJS = require(\"crypto-js\");\nconst ques = questions;\nconst V_Value = process.env.REACT_APP_V_Value;\nconst T_Value = process.env.REACT_APP_T_Value;\n\nconst Question = () => {\n\n    const [question, setQuestion] = useState('');\n    const [answer, setAnswer] = useState('');\n    const {questionId} = useParams()\n    const history = useHistory()\n\n    const [showError, setShowError] = useState(false);\n    const [showSuccess, setShowSuccess] = useState(false);\n\n    useEffect(() => {\n\n        const cipher_text = localStorage.getItem('questionId')\n\n        if(cipher_text===null) {\n            history.push('/instructions')\n        }\n\n        const SECRET_KEY = process.env.REACT_APP_SECRET_KEY;\n        const bytes = CryptoJS.AES.decrypt(cipher_text, SECRET_KEY)\n        const local_questionId = bytes.toString(CryptoJS.enc.Utf8)\n        \n        if(local_questionId!==questionId) {\n            history.push(`/question/${local_questionId}`)\n        }\n        \n        setQuestion(ques[local_questionId-1]);\n\n    },[history, questionId])\n\n    const NextQuestion = () => {\n\n        const SECRET_KEY = process.env.REACT_APP_SECRET_KEY\n        var cipher_text = CryptoJS.AES.encrypt((parseInt(questionId)+1).toString(), SECRET_KEY)\n        localStorage.setItem('questionId', cipher_text)\n\n        if(parseInt(questionId)!==18) {\n            history.push(`/question/${questionId+1}`)\n        }\n        else {\n            history.push('/winner')\n        }\n    }\n\n    const checkAnswer = () => {\n        const SECRET_KEY = process.env.REACT_APP_SECRET_KEY;\n        const bytes = CryptoJS.AES.decrypt(question.answer, SECRET_KEY)\n        const correct_answer = bytes.toString(CryptoJS.enc.Utf8)\n\n        if(answer===correct_answer) {\n            setShowSuccess(true)\n            NextQuestion()\n            setAnswer(\"\")\n        }\n        else {\n            setShowError(true)\n        }\n    }\n\n    return (\n        <div className=\"question-page\">\n            <Snackbar\n                anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n                }}\n                open={showError}\n                autoHideDuration={6000}\n                message=\"Wrong Answer\"\n                action={\n                    <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={() => setShowError(false)}>\n                        <CloseIcon fontSize=\"small\" />\n                    </IconButton>\n                }\n            />\n            <Snackbar\n                anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n                }}\n                open={showSuccess}\n                autoHideDuration={6000}\n                message=\"Correct Answer\"\n                action={\n                    <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={() => setShowSuccess(false)}>\n                        <CloseIcon fontSize=\"small\" />\n                    </IconButton>\n                }\n            />\n            \n            <Container>\n                {parseInt(questionId)!==18? <h1>Question {question.id}</h1>: <h1>Congratulations!! You are at the final question</h1>}\n                <Grid container justify='center'>\n                    <Grid item md={6}>\n                        {question.text ? question.text.map((item) => {\n                            return (\n                                <p>{item}</p>\n                            )\n                        }) : <div></div>}\n\n                        {parseInt(questionId)===18? <><p>V: {V_Value}</p> <p>t: {T_Value}</p></>: <div></div>}\n                        \n                        {question.imgURL \n                        ?   <div style={{textAlign: 'center', marginBottom: '20px'}}>\n                                <img src={question.imgURL} alt=\"question\"/>\n                            </div>\n                        : <div></div>}\n                        \n                        <TextField \n                            label=\"Answer\" \n                            variant=\"outlined\" \n                            value={answer}\n                            onChange={(e)=>(setAnswer(e.target.value))}\n                            fullWidth\n                        />\n                    </Grid>\n                </Grid>\n                <div style={{textAlign: 'center', marginTop: '20px'}}>\n                    <Button variant=\"contained\" onClick={checkAnswer}>Submit</Button>\n                </div>\n            </Container>\n        </div>\n    )\n}\n\nexport default Question\n","import { Container } from '@material-ui/core'\nimport { GoogleSpreadsheet } from 'google-spreadsheet';\nimport React, { useEffect } from 'react'\nimport { useHistory } from 'react-router'\n\nvar CryptoJS = require(\"crypto-js\");\n\nconst SPREADSHEET_ID = process.env.REACT_APP_SPREADSHEET_ID;\nconst SHEET_ID = process.env.REACT_APP_SHEET_ID;\nconst CLIENT_EMAIL = process.env.REACT_APP_GOOGLE_CLIENT_EMAIL;\nconst PRIVATE_KEY = process.env.REACT_APP_GOOGLE_SERVICE_PRIVATE_KEY;\n\nconst doc = new GoogleSpreadsheet(SPREADSHEET_ID);\n\nconst TeamName = localStorage.getItem('TeamName')\nconst Name1 = localStorage.getItem('Name1')\nconst Email1 = localStorage.getItem('Email1')\nconst Name2 = localStorage.getItem('Name2')\nconst Email2 = localStorage.getItem('Email2')\n\n\nconst Winner = () => {\n\n    const history = useHistory()\n\n    useEffect(() => {\n\n        const cipher_text = localStorage.getItem('questionId')\n\n        if(cipher_text===null) {\n            history.push('/instructions')\n        }\n\n        const SECRET_KEY = process.env.REACT_APP_SECRET_KEY;\n        const bytes = CryptoJS.AES.decrypt(cipher_text, SECRET_KEY)\n        const local_questionId = bytes.toString(CryptoJS.enc.Utf8)\n        \n        if(local_questionId!==\"19\") {\n            history.push(`/question/${local_questionId}`)\n        }\n\n        const appendSpreadsheet = async (row) => {\n            try {\n                await doc.useServiceAccountAuth({\n                    client_email: CLIENT_EMAIL,\n                    private_key: PRIVATE_KEY,\n                });\n                // loads document properties and worksheets\n                await doc.loadInfo();\n    \n                const sheet = doc.sheetsById[SHEET_ID];\n                await sheet.addRow(row);\n            } catch (e) {\n                console.error('Error: ', e);\n            }\n        };\n\n        const newRow = { \n            TeamName: TeamName, \n            Name1: Name1,\n            Email1: Email1,\n            Name2: Name2,\n            Email2: Email2,\n            Time : new Date().toLocaleString()\n        };\n\n        appendSpreadsheet(newRow)\n\n    },[history])\n\n    return (\n        <div className=\"winner-page\">\n            <Container>\n                <h1>Congratulations!!!!!</h1>\n            </Container>\n        </div>\n    )\n}\n\nexport default Winner\n","import React from 'react'\nimport {HashRouter, Route, Switch} from 'react-router-dom'\nimport HomePage from './components/HomePage'\nimport Instructions from './components/Instructions'\nimport NavBar from './components/NavBar'\nimport Question from './components/Question'\nimport Winner from './components/Winner'\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <NavBar/>\n      <Switch>\n        <Route exact path=\"/\">\n          <HomePage/>\n        </Route>\n        <Route path=\"/instructions\">\n          <Instructions/>\n        </Route>\n        <Route path=\"/question/:questionId\">\n          <Question/>\n        </Route>\n        <Route path=\"/winner\">\n          <Winner/>\n        </Route>\n      </Switch>\n    </HashRouter>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './css/main.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}